{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport { useNavigation } from '@react-navigation/core';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport HomeScreen from \"./HomeScreen\";\nimport RoomScreen from \"./RoomScreen\";\nimport SettingScreen from \"./SettingScreen\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { Entypo } from '@expo/vector-icons';\nimport { SimpleLineIcons } from '@expo/vector-icons';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, onAuthStateChanged, FacebookAuthProvider, signInWithCredential } from 'firebase/auth';\nimport { auth } from \"../../firebase-config\";\nimport { db } from \"../../firebase-config\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { onValue, ref } from 'firebase/database';\nimport { setDataUser, setDataHome } from \"../Actions/counts\";\nimport { StText } from \"react-native-web/dist/index\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\n\nvar MainScreen = function MainScreen(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      datahome = _useState2[0],\n      setDataHome = _useState2[1];\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    var unsubscribe = auth.onAuthStateChanged(function (user) {\n      if (!user) {\n        navigation.replace(\"Login\");\n      } else {\n        if (user.uid) {\n          var _user = onValue(ref(db, '/users/' + _user.uid), function (querySnapShot) {\n            var data = querySnapShot.val() || [];\n            dispatch(setDataUser(data));\n            var home = onValue(ref(db, '/Homes/' + data.home), function (querySnapShot) {\n              var dataHome = querySnapShot.val() || [];\n              dispatch(setDataHome(dataHome));\n            });\n          });\n        }\n      }\n    });\n    return unsubscribe;\n  }, []);\n\n  var getTabActive = function getTabActive() {\n    var tabActive = \"Home\";\n\n    if (props.route && props.route.params && props.route.params.options && props.route.params.options.tabActive) {\n      tabActive = props.route.params.options.tabActive;\n    }\n\n    return tabActive;\n  };\n\n  var renderMain = function renderMain() {\n    _jsx(Text, {\n      children: \"loading ...\"\n    });\n  };\n\n  return renderMain();\n};\n\nexport default MainScreen;","map":{"version":3,"names":["React","useEffect","useState","useNavigation","createBottomTabNavigator","HomeScreen","RoomScreen","SettingScreen","Ionicons","Entypo","SimpleLineIcons","createUserWithEmailAndPassword","signInWithEmailAndPassword","onAuthStateChanged","FacebookAuthProvider","signInWithCredential","auth","db","useDispatch","useSelector","onValue","ref","setDataUser","setDataHome","StText","Tab","MainScreen","props","datahome","dispatch","unsubscribe","user","navigation","replace","uid","querySnapShot","data","val","home","dataHome","getTabActive","tabActive","route","params","options","renderMain"],"sources":["D:/uet/KLTN/ReactNative/Test3/SmartHome/src/Screens/MainScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport HomeScreen from './HomeScreen';\r\nimport RoomScreen from './RoomScreen';\r\nimport SettingScreen from './SettingScreen';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { Entypo } from '@expo/vector-icons';\r\nimport { SimpleLineIcons } from '@expo/vector-icons';\r\nimport {\r\n    createUserWithEmailAndPassword,\r\n    signInWithEmailAndPassword,\r\n    onAuthStateChanged,\r\n    FacebookAuthProvider,\r\n    signInWithCredential,\r\n} from 'firebase/auth';\r\nimport { auth } from '../../firebase-config'\r\nimport { db } from '../../firebase-config'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { onValue, ref } from 'firebase/database';\r\nimport { setDataUser, setDataHome } from '../Actions/counts';\r\nimport { StText} from 'react-native';\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst MainScreen = (props) => {\r\n    const [datahome, setDataHome] = useState([]);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // \r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            if (!user) {\r\n                navigation.replace(\"Login\")\r\n            }\r\n            else {\r\n                if (user.uid) {\r\n                    const user = onValue(ref(db, '/users/' + user.uid), querySnapShot => {\r\n                        let data = querySnapShot.val() || [];\r\n                        dispatch(setDataUser(data));\r\n\r\n                        const home = onValue(ref(db, '/Homes/' + data.home), querySnapShot => {\r\n                            let dataHome = querySnapShot.val() || [];\r\n                            dispatch(setDataHome(dataHome));\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n        })\r\n\r\n        return unsubscribe\r\n    }, [])\r\n\r\n    const getTabActive = () => {\r\n        let tabActive = \"Home\";\r\n        if (props.route && props.route.params && props.route.params.options && props.route.params.options.tabActive) {\r\n            tabActive = props.route.params.options.tabActive;\r\n        }\r\n        return tabActive;\r\n    }\r\n\r\n    const renderMain = () => {\r\n        <Text>loading ...</Text>\r\n    }\r\n\r\n\r\n    return (\r\n        renderMain()\r\n        //     datahome ? (<Tab.Navigator initialRouteName={getTabActive()}>\r\n        //     <Tab.Screen options={{\r\n        //         headerShown: false,\r\n        //         tabBarActiveTintColor: \"#FA6400\",\r\n        //         tabBarIcon: ({ color, size }) => (\r\n        //             <Ionicons name=\"home\" color={color} size={size} />\r\n        //         )\r\n        //     }} name=\"Home\" component={HomeScreen} />\r\n        //     <Tab.Screen options={{\r\n        //         headerShown: false,\r\n        //         tabBarActiveTintColor: \"#FA6400\",\r\n        //         tabBarIcon: ({ color, size }) => (\r\n        //             <Entypo name=\"sweden\" color={color} size={size} />\r\n        //         )\r\n        //     }} name=\"Rooms\" component={RoomScreen} />\r\n        //     <Tab.Screen options={{\r\n        //         headerShown: false,\r\n        //         tabBarActiveTintColor: \"#FA6400\",\r\n        //         tabBarIcon: ({ color, size }) => (\r\n        //             <SimpleLineIcons name=\"settings\" color={color} size={size} />\r\n        //         )\r\n        //     }} name=\"Settings\" component={SettingScreen} />\r\n        // </Tab.Navigator>) : <Text>loading ...</Text>>\r\n        \r\n    );\r\n}\r\n\r\nexport default MainScreen;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,OAAOC,UAAP;AACA,OAAOC,UAAP;AACA,OAAOC,aAAP;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SACIC,8BADJ,EAEIC,0BAFJ,EAGIC,kBAHJ,EAIIC,oBAJJ,EAKIC,oBALJ,QAMO,eANP;AAOA,SAASC,IAAT;AACA,SAASC,EAAT;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,EAAkBC,GAAlB,QAA6B,mBAA7B;AACA,SAASC,WAAT,EAAsBC,WAAtB;SACSC,M;;AAET,IAAMC,GAAG,GAAGrB,wBAAwB,EAApC;;AAEA,IAAMsB,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;EAC1B,gBAAgCzB,QAAQ,CAAC,EAAD,CAAxC;EAAA;EAAA,IAAO0B,QAAP;EAAA,IAAiBL,WAAjB;;EAEA,IAAMM,QAAQ,GAAGX,WAAW,EAA5B;EAGAjB,SAAS,CAAC,YAAM;IACZ,IAAM6B,WAAW,GAAGd,IAAI,CAACH,kBAAL,CAAwB,UAAAkB,IAAI,EAAI;MAChD,IAAI,CAACA,IAAL,EAAW;QACPC,UAAU,CAACC,OAAX,CAAmB,OAAnB;MACH,CAFD,MAGK;QACD,IAAIF,IAAI,CAACG,GAAT,EAAc;UACV,IAAMH,KAAI,GAAGX,OAAO,CAACC,GAAG,CAACJ,EAAD,EAAK,YAAYc,KAAI,CAACG,GAAtB,CAAJ,EAAgC,UAAAC,aAAa,EAAI;YACjE,IAAIC,IAAI,GAAGD,aAAa,CAACE,GAAd,MAAuB,EAAlC;YACAR,QAAQ,CAACP,WAAW,CAACc,IAAD,CAAZ,CAAR;YAEA,IAAME,IAAI,GAAGlB,OAAO,CAACC,GAAG,CAACJ,EAAD,EAAK,YAAYmB,IAAI,CAACE,IAAtB,CAAJ,EAAiC,UAAAH,aAAa,EAAI;cAClE,IAAII,QAAQ,GAAGJ,aAAa,CAACE,GAAd,MAAuB,EAAtC;cACAR,QAAQ,CAACN,WAAW,CAACgB,QAAD,CAAZ,CAAR;YACH,CAHmB,CAApB;UAIH,CARmB,CAApB;QASH;MACJ;IACJ,CAjBmB,CAApB;IAmBA,OAAOT,WAAP;EACH,CArBQ,EAqBN,EArBM,CAAT;;EAuBA,IAAMU,YAAY,GAAG,SAAfA,YAAe,GAAM;IACvB,IAAIC,SAAS,GAAG,MAAhB;;IACA,IAAId,KAAK,CAACe,KAAN,IAAef,KAAK,CAACe,KAAN,CAAYC,MAA3B,IAAqChB,KAAK,CAACe,KAAN,CAAYC,MAAZ,CAAmBC,OAAxD,IAAmEjB,KAAK,CAACe,KAAN,CAAYC,MAAZ,CAAmBC,OAAnB,CAA2BH,SAAlG,EAA6G;MACzGA,SAAS,GAAGd,KAAK,CAACe,KAAN,CAAYC,MAAZ,CAAmBC,OAAnB,CAA2BH,SAAvC;IACH;;IACD,OAAOA,SAAP;EACH,CAND;;EAQA,IAAMI,UAAU,GAAG,SAAbA,UAAa,GAAM;IACrB,KAAC,IAAD;MAAA;IAAA;EACH,CAFD;;EAKA,OACIA,UAAU,EADd;AA2BH,CArED;;AAuEA,eAAenB,UAAf"},"metadata":{},"sourceType":"module"}