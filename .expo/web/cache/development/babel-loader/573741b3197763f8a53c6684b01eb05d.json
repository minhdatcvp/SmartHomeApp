{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { useNavigation } from '@react-navigation/core';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport HomeScreen from \"./HomeScreen\";\nimport RoomScreen from \"./RoomScreen\";\nimport SettingScreen from \"./SettingScreen\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { Entypo } from '@expo/vector-icons';\nimport { SimpleLineIcons } from '@expo/vector-icons';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, onAuthStateChanged, FacebookAuthProvider, signInWithCredential } from 'firebase/auth';\nimport { auth } from \"../../firebase-config\";\nimport { db } from \"../../firebase-config\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { onValue, ref } from 'firebase/database';\nimport { setDataUser, setDataHome } from \"../Actions/counts\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\n\nvar MainScreen = function MainScreen(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    var unsubscribe = auth.onAuthStateChanged(function (user) {\n      if (!user) {\n        navigation.replace(\"Login\");\n      } else {\n        if (user.uid) {\n          var _user = onValue(ref(db, '/users/' + _user.uid), function (querySnapShot) {\n            var data = querySnapShot.val() || [];\n            dispatch(setDataUser(data));\n            var home = onValue(ref(db, '/Homes/' + data.home), function (querySnapShot) {\n              var dataHome = querySnapShot.val() || [];\n              dispatch(setDataHome(dataHome));\n            });\n          });\n        }\n      }\n    });\n    return unsubscribe;\n  }, []);\n\n  var getTabActive = function getTabActive() {\n    var tabActive = \"Home\";\n\n    if (props.route && props.route.params && props.route.params.options && props.route.params.options.tabActive) {\n      tabActive = props.route.params.options.tabActive;\n    }\n\n    return tabActive;\n  };\n\n  var renderMain = function renderMain() {\n    return _jsxs(Tab.Navigator, {\n      initialRouteName: getTabActive(),\n      children: [_jsx(Tab.Screen, {\n        options: {\n          headerShown: false,\n          tabBarActiveTintColor: \"#FA6400\",\n          tabBarIcon: function tabBarIcon(_ref) {\n            var color = _ref.color,\n                size = _ref.size;\n            return _jsx(Ionicons, {\n              name: \"home\",\n              color: color,\n              size: size\n            });\n          }\n        },\n        name: \"Home\",\n        component: HomeScreen\n      }), _jsx(Tab.Screen, {\n        options: {\n          headerShown: false,\n          tabBarActiveTintColor: \"#FA6400\",\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var color = _ref2.color,\n                size = _ref2.size;\n            return _jsx(Entypo, {\n              name: \"sweden\",\n              color: color,\n              size: size\n            });\n          }\n        },\n        name: \"Rooms\",\n        component: RoomScreen\n      }), _jsx(Tab.Screen, {\n        options: {\n          headerShown: false,\n          tabBarActiveTintColor: \"#FA6400\",\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var color = _ref3.color,\n                size = _ref3.size;\n            return _jsx(SimpleLineIcons, {\n              name: \"settings\",\n              color: color,\n              size: size\n            });\n          }\n        },\n        name: \"Settings\",\n        component: SettingScreen\n      })]\n    });\n  };\n\n  return isLoading ? _jsxs(Tab.Navigator, {\n    initialRouteName: getTabActive(),\n    children: [_jsx(Tab.Screen, {\n      options: {\n        headerShown: false,\n        tabBarActiveTintColor: \"#FA6400\",\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var color = _ref4.color,\n              size = _ref4.size;\n          return _jsx(Ionicons, {\n            name: \"home\",\n            color: color,\n            size: size\n          });\n        }\n      },\n      name: \"Home\",\n      component: HomeScreen\n    }), _jsx(Tab.Screen, {\n      options: {\n        headerShown: false,\n        tabBarActiveTintColor: \"#FA6400\",\n        tabBarIcon: function tabBarIcon(_ref5) {\n          var color = _ref5.color,\n              size = _ref5.size;\n          return _jsx(Entypo, {\n            name: \"sweden\",\n            color: color,\n            size: size\n          });\n        }\n      },\n      name: \"Rooms\",\n      component: RoomScreen\n    }), _jsx(Tab.Screen, {\n      options: {\n        headerShown: false,\n        tabBarActiveTintColor: \"#FA6400\",\n        tabBarIcon: function tabBarIcon(_ref6) {\n          var color = _ref6.color,\n              size = _ref6.size;\n          return _jsx(SimpleLineIcons, {\n            name: \"settings\",\n            color: color,\n            size: size\n          });\n        }\n      },\n      name: \"Settings\",\n      component: SettingScreen\n    })]\n  }) : _jsx(View, {\n    style: styles.container,\n    children: _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"#0000ff\"\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\"\n  }\n});\nexport default MainScreen;","map":{"version":3,"names":["React","Fragment","useEffect","useState","useNavigation","createBottomTabNavigator","HomeScreen","RoomScreen","SettingScreen","Ionicons","Entypo","SimpleLineIcons","createUserWithEmailAndPassword","signInWithEmailAndPassword","onAuthStateChanged","FacebookAuthProvider","signInWithCredential","auth","db","useDispatch","useSelector","onValue","ref","setDataUser","setDataHome","Tab","MainScreen","props","isLoading","setIsLoading","dispatch","unsubscribe","user","navigation","replace","uid","querySnapShot","data","val","home","dataHome","getTabActive","tabActive","route","params","options","renderMain","headerShown","tabBarActiveTintColor","tabBarIcon","color","size","styles","container","StyleSheet","create","flex","justifyContent"],"sources":["D:/uet/KLTN/ReactNative/Test3/SmartHome/src/Screens/MainScreen.js"],"sourcesContent":["import React, { Fragment, useEffect, useState } from 'react'\r\nimport { useNavigation } from '@react-navigation/core'\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport HomeScreen from './HomeScreen';\r\nimport RoomScreen from './RoomScreen';\r\nimport SettingScreen from './SettingScreen';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { Entypo } from '@expo/vector-icons';\r\nimport { SimpleLineIcons } from '@expo/vector-icons';\r\nimport {\r\n    createUserWithEmailAndPassword,\r\n    signInWithEmailAndPassword,\r\n    onAuthStateChanged,\r\n    FacebookAuthProvider,\r\n    signInWithCredential,\r\n} from 'firebase/auth';\r\nimport { auth } from '../../firebase-config'\r\nimport { db } from '../../firebase-config'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { onValue, ref } from 'firebase/database';\r\nimport { setDataUser, setDataHome } from '../Actions/counts';\r\nimport { ActivityIndicator, View, StyleSheet } from 'react-native';\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst MainScreen = (props) => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    // \r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            if (!user) {\r\n                navigation.replace(\"Login\")\r\n            }\r\n            else {\r\n                if (user.uid) {\r\n                    const user = onValue(ref(db, '/users/' + user.uid), querySnapShot => {\r\n                        let data = querySnapShot.val() || [];\r\n                        dispatch(setDataUser(data));\r\n\r\n                        const home = onValue(ref(db, '/Homes/' + data.home), querySnapShot => {\r\n                            let dataHome = querySnapShot.val() || [];\r\n                            dispatch(setDataHome(dataHome));\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n        })\r\n\r\n        return unsubscribe\r\n    }, [])\r\n\r\n    const getTabActive = () => {\r\n        let tabActive = \"Home\";\r\n        if (props.route && props.route.params && props.route.params.options && props.route.params.options.tabActive) {\r\n            tabActive = props.route.params.options.tabActive;\r\n        }\r\n        return tabActive;\r\n    }\r\n\r\n    const renderMain = () => {\r\n\r\n        return (\r\n            <Tab.Navigator initialRouteName={getTabActive()}>\r\n                <Tab.Screen options={{\r\n                    headerShown: false,\r\n                    tabBarActiveTintColor: \"#FA6400\",\r\n                    tabBarIcon: ({ color, size }) => (\r\n                        <Ionicons name=\"home\" color={color} size={size} />\r\n                    )\r\n                }} name=\"Home\" component={HomeScreen} />\r\n                <Tab.Screen options={{\r\n                    headerShown: false,\r\n                    tabBarActiveTintColor: \"#FA6400\",\r\n                    tabBarIcon: ({ color, size }) => (\r\n                        <Entypo name=\"sweden\" color={color} size={size} />\r\n                    )\r\n                }} name=\"Rooms\" component={RoomScreen} />\r\n                <Tab.Screen options={{\r\n                    headerShown: false,\r\n                    tabBarActiveTintColor: \"#FA6400\",\r\n                    tabBarIcon: ({ color, size }) => (\r\n                        <SimpleLineIcons name=\"settings\" color={color} size={size} />\r\n                    )\r\n                }} name=\"Settings\" component={SettingScreen} />\r\n            </Tab.Navigator>\r\n        )\r\n    }\r\n\r\n\r\n    return isLoading ?\r\n        (<Tab.Navigator initialRouteName={getTabActive()}>\r\n            <Tab.Screen options={{\r\n                headerShown: false,\r\n                tabBarActiveTintColor: \"#FA6400\",\r\n                tabBarIcon: ({ color, size }) => (\r\n                    <Ionicons name=\"home\" color={color} size={size} />\r\n                )\r\n            }} name=\"Home\" component={HomeScreen} />\r\n            <Tab.Screen options={{\r\n                headerShown: false,\r\n                tabBarActiveTintColor: \"#FA6400\",\r\n                tabBarIcon: ({ color, size }) => (\r\n                    <Entypo name=\"sweden\" color={color} size={size} />\r\n                )\r\n            }} name=\"Rooms\" component={RoomScreen} />\r\n            <Tab.Screen options={{\r\n                headerShown: false,\r\n                tabBarActiveTintColor: \"#FA6400\",\r\n                tabBarIcon: ({ color, size }) => (\r\n                    <SimpleLineIcons name=\"settings\" color={color} size={size} />\r\n                )\r\n            }} name=\"Settings\" component={SettingScreen} />\r\n        </Tab.Navigator>)\r\n        :\r\n        (<View style={styles.container}>\r\n            <ActivityIndicator size=\"large\" color=\"#0000ff\"/>\r\n        </View>);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: \"center\"\r\n    }\r\n});\r\n\r\nexport default MainScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module"}